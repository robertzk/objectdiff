% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list.R
\name{homogeneous_list_patch}
\alias{homogeneous_list_patch}
\title{Compute a patch between two same-name same-length lists.}
\usage{
homogeneous_list_patch(old_object, new_object)
}
\arguments{
\item{old_object}{ANY. The "before" object.}

\item{new_object}{ANY. The "new" object. These are usually a data.frame or
an environment.}
}
\value{
a \code{\link{patch}} translating the \code{old_object} to
   the \code{new_object}.
}
\description{
Compute a patch between two same-name same-length lists.
}
\note{
Taking the diff of two lists requires good performance on the following
two competing scenarios:
  1. Long lists with small elements
  2. Short lists with large elements
We will call the former long lists and the latter wide lists.

In practice, we will not have to deal with incredibly nested lists,
and R places stack overflow limits on these in any case. We make use of
this fact by performing a stochastic estimation to determine whether the
list is short or wide.

In particular, we sample up to 5% of the positions in the list and recursively
determine their size with the sample sampling strategy using
utils::object.size.
}

